{
  "scopeName": "source.runfile",
  "name": "Runfile",
  "patterns": [
    {
      "include": "#group-header"
    },
    {
      "include": "#command-line"
    },
    {
      "include": "#flag"
    },
    {
      "include": "#argument"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#shell-script"
    },
    { }
  ],
  "repository": {
    "group-header": {
      "name": "markup.heading.runfile",
      "match": "^#\\s*-{3,}\\s*([^-\\s][^-]*[^-\\s]|\\S)\\s*-{3,}\\s*$",
      "captures": {
        "1": {
          "name": "entity.name.section.runfile"
        }
      }
    },
    "command-line": {
      "begin": "^(?!#)(?!\\s{2})\\s*([^\\s,#:][^#:,\\s]*)",
      "beginCaptures": {
        "1": { "name": "entity.name.function.runfile" }
      },
      "end": "$",
      "patterns": [
        {
          "match": "\\G\\s*(,)(\\s*)([^\\s,#:][^#:,\\s]*)",
          "captures": {
            "1": { "name": "punctuation.separator.alias.runfile" },
            "3": { "name": "entity.name.function.runfile" }
          }
        },
        {
          "match": "\\G\\s*((?:\\.\\.\\.)?([^\\s#?,]+)(?:\\.\\.\\.)?)(\\?)?",
          "captures": {
            "1": { "name": "variable.parameter.runfile" },
            "3": { "name": "punctuation.definition.optional.runfile" }
          }
        },
        {
          "match": "\\G\\s*(-)([A-Za-z])(,)?\\s*(--)([A-Za-z0-9_-]+)(=<(?:[A-Za-z0-9_-]+)>)?",
          "captures": {
            "1": { "name": "constant.character.flag.short.runfile" },
            "2": { "name": "constant.character.flag.short.runfile" },
            "3": { "name": "punctuation.separator.flag-alias.runfile" },
            "4": { "name": "constant.character.flag.long.runfile" },
            "5": { "name": "constant.character.flag.long.runfile" },
            "6": {
              "patterns": [
                {
                  "match": "=<([A-Za-z0-9_-]+)>",
                  "captures": { "1": { "name": "storage.type.runfile" } }
                }
              ]
            }
          }
        },
        {
          "match": "\\G\\s*(--)([A-Za-z0-9_-]+)(=<(?:[A-Za-z0-9_-]+)>)?",
          "captures": {
            "1": { "name": "constant.character.flag.long.runfile" },
            "2": { "name": "constant.character.flag.long.runfile" },
            "3": {
              "patterns": [
                {
                  "match": "=<([A-Za-z0-9_-]+)>",
                  "captures": { "1": { "name": "storage.type.runfile" } }
                }
              ]
            }
          }
        },
        {
          "match": "\\G\\s*(-)([A-Za-z])",
          "captures": {
            "1": { "name": "constant.character.flag.short.runfile" },
            "2": { "name": "constant.character.flag.short.runfile" }
          }
        },
        {
          "name": "punctuation.terminator.command.runfile",
          "match": "\\G\\s*:"
        }
      ]
    },
    "argument": {
      "match": "^\\s{2}(?!-)((\\.\\.\\.)([^\\s#]+)|([^\\s#?]+)(\\?)?)\\s*(#.*)?$",
      "captures": {
        "2": { "name": "punctuation.operator.varargs.runfile" },
        "3": { "name": "variable.parameter.runfile" },
        "4": { "name": "variable.parameter.runfile" },
        "5": { "name": "punctuation.definition.optional.runfile" },
        "6": { "name": "comment.line.runfile" }
      }
    },
    "flag": {
      "patterns": [
        {
          "match": "^\\s{2}(-)([A-Za-z])(,)(\\s*)(--)([A-Za-z0-9_-]+)(=<(?:[A-Za-z0-9_-]+)>)?(?::)?\\s*(#.*)?$",
          "captures": {
            "1": { "name": "constant.character.flag.short.runfile" },
            "2": { "name": "constant.character.flag.short.runfile" },
            "3": { "name": "punctuation.separator.flag-alias.runfile" },
            "5": { "name": "constant.character.flag.long.runfile" },
            "6": { "name": "constant.character.flag.long.runfile" },
            "7": {
              "patterns": [
                {
                  "match": "=<([A-Za-z0-9_-]+)>",
                  "captures": { "1": { "name": "storage.type.runfile" } }
                }
              ]
            },
            "8": { "name": "comment.line.runfile" }
          }
        },
        {
          "match": "^\\s{2}(--)([A-Za-z0-9_-]+)(=<(?:[A-Za-z0-9_-]+)>)?(?::)?\\s*(#.*)?$",
          "captures": {
            "1": { "name": "constant.character.flag.long.runfile" },
            "2": { "name": "constant.character.flag.long.runfile" },
            "3": {
              "patterns": [
                {
                  "match": "=<([A-Za-z0-9_-]+)>",
                  "captures": { "1": { "name": "storage.type.runfile" } }
                }
              ]
            },
            "4": { "name": "comment.line.runfile" }
          }
        },
        {
          "match": "^\\s{2}(-)([A-Za-z])\\s*(#.*)?$",
          "captures": {
            "1": { "name": "constant.character.flag.short.runfile" },
            "2": { "name": "constant.character.flag.short.runfile" },
            "3": { "name": "comment.line.runfile" }
          }
        }
      ]
    },
    "comment": {
      "name": "comment.line.runfile",
      "match": "^\\s*#.*$"
    },
    "shell-script": {
      "name": "source.shell.embedded.runfile",
      "contentName": "source.shell",
      "begin": "^(\\s{2})(?=\\S)",
      "beginCaptures": {
        "1": { "name": "punctuation.whitespace.indent.runfile" }
      },
      "end": "^(?!\\s{2})",
      "applyEndPatternLast": true,
      "patterns": [
        { "include": "source.shell" }
      ]
    }
  }
}
